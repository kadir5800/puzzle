"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Crossword.tsx":
/*!**************************************!*\
  !*** ./src/components/Crossword.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst Crossword = (param)=>{\n    let { puzzle, setPuzzle, questionMap, selectedAnswer, setScore } = param;\n    _s();\n    const gridSize = puzzle.length > 0 ? puzzle[0].length : 0;\n    const [answerList, setAnswerList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const maxCellSize = 70;\n    // Calculate the cell size with a scaling factor\n    const cellSize = Math.min(maxCellSize, window.innerWidth / gridSize / 2);\n    const handleChange = (e, rowIndex, colIndex)=>{\n        const newPuzzle = [\n            ...puzzle\n        ];\n        newPuzzle[rowIndex][colIndex] = e.target.value.toUpperCase();\n        setPuzzle(newPuzzle);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(questionMap);\n        const updatedAnswerList = [];\n        Object.values(questionMap).forEach((question)=>{\n            const { xStart, yStart, direction, answer, length } = question;\n            for(let i = 0; i < length; i++){\n                if (direction === \"horizontal\") {\n                    updatedAnswerList.push({\n                        x: xStart + i,\n                        y: yStart,\n                        answer,\n                        direction\n                    });\n                } else {\n                    updatedAnswerList.push({\n                        x: xStart,\n                        y: yStart + i,\n                        answer,\n                        direction\n                    });\n                }\n            }\n        });\n        setAnswerList(updatedAnswerList);\n    }, [\n        puzzle,\n        questionMap\n    ]);\n    const checkAnswerCompletion = (x, y, direction, answer)=>{\n        if (direction === \"horizontal\") {\n            return puzzle[y].slice(x, x + answer.length).every((cell)=>cell !== \"\");\n        } else if (direction === \"vertical\") {\n            for(let i = 0; i < answer.length; i++){\n                if (puzzle[y + i][x] === \"\") {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    const checkAnswerCorrectness = (x, y, direction, answer)=>{\n        if (direction === \"horizontal\") {\n            const answerStr = puzzle[y].slice(x, x + answer.length).join(\"\");\n            return answerStr === answer;\n        } else if (direction === \"vertical\") {\n            let answerStr = \"\";\n            for(let i = 0; i < answer.length; i++){\n                answerStr += puzzle[y + i][x];\n            }\n            return answerStr === answer;\n        }\n        return false;\n    };\n    const isAnswerComplete = (rowIndex, colIndex)=>{\n        const answer = answerList.filter((item)=>item.x === colIndex && item.y === rowIndex);\n        var result = false;\n        if (answer.length == 0) {\n            return false;\n        }\n        answer.forEach((element)=>{\n            let firstAns = answerList.find((f)=>f.answer == element.answer);\n            var resultx = checkAnswerCompletion(firstAns.x, firstAns.y, firstAns.direction, firstAns.answer);\n            if (resultx) result = true;\n        });\n        return result;\n    };\n    const isAnswerCorrect = (rowIndex, colIndex)=>{\n        const answer = answerList.filter((item)=>item.x === colIndex && item.y === rowIndex);\n        var result = false;\n        if (answer.length == 0) {\n            return false;\n        }\n        answer.forEach((element)=>{\n            let firstAns = answerList.find((f)=>f.answer == element.answer);\n            var resultx = checkAnswerCorrectness(firstAns.x, firstAns.y, firstAns.direction, firstAns.answer);\n            if (resultx) {\n                result = true;\n            //  let lastAns=answerList.findLast(f=> f.answer == element.answer)!!;\n            //  if (rowIndex==lastAns.y && colIndex ==lastAns.x) {\n            //    setScore(100);\n            //  }\n            }\n        });\n        return result;\n    };\n    const isAnswerSelected = (rowIndex, colIndex)=>{\n        return answerList.some((item)=>item.x === colIndex && item.y === rowIndex && item.answer === selectedAnswer);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(\".concat(gridSize, \", \").concat(cellSize, \"px)\"),\n            gap: \"1px\"\n        },\n        children: puzzle.map((row, rowIndex)=>row.map((cell, colIndex)=>{\n                const cellKey = \"\".concat(rowIndex, \"-\").concat(colIndex);\n                const isWhite = answerList.some((item)=>item.x === colIndex && item.y === rowIndex);\n                const isComplete = isAnswerComplete(rowIndex, colIndex);\n                const isCorrect = isComplete && isAnswerCorrect(rowIndex, colIndex);\n                const isSelected = isAnswerSelected(rowIndex, colIndex);\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"cell \".concat(isWhite ? \"cell-white\" : \"cell-black\", \" \").concat(isComplete ? isCorrect ? \"complete correct\" : \"complete incorrect\" : \"\", \" \").concat(isSelected ? \"selected\" : \"\"),\n                    style: {\n                        width: \"\".concat(cellSize, \"px\"),\n                        height: \"\".concat(cellSize, \"px\"),\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\"\n                    },\n                    children: [\n                        isWhite && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            maxLength: 1,\n                            value: cell,\n                            onChange: (e)=>handleChange(e, rowIndex, colIndex),\n                            disabled: isCorrect,\n                            className: \"cell-input\",\n                            style: {\n                                width: \"100%\",\n                                height: \"100%\",\n                                textAlign: \"center\",\n                                fontSize: \"\".concat(cellSize / 2, \"px\")\n                            }\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\kadir\\\\source\\\\repos\\\\puzzle\\\\src\\\\components\\\\Crossword.tsx\",\n                            lineNumber: 135,\n                            columnNumber: 15\n                        }, undefined),\n                        questionMap[cellKey] !== undefined && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"question-number\",\n                            style: {\n                                position: \"absolute\",\n                                top: \"0\",\n                                left: \"0\",\n                                fontSize: \"\".concat(cellSize / 4, \"px\")\n                            },\n                            children: questionMap[cellKey].number\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\kadir\\\\source\\\\repos\\\\puzzle\\\\src\\\\components\\\\Crossword.tsx\",\n                            lineNumber: 146,\n                            columnNumber: 15\n                        }, undefined)\n                    ]\n                }, cellKey, true, {\n                    fileName: \"C:\\\\Users\\\\kadir\\\\source\\\\repos\\\\puzzle\\\\src\\\\components\\\\Crossword.tsx\",\n                    lineNumber: 123,\n                    columnNumber: 11\n                }, undefined);\n            }))\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kadir\\\\source\\\\repos\\\\puzzle\\\\src\\\\components\\\\Crossword.tsx\",\n        lineNumber: 113,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Crossword, \"75omPFw3mdgeCBizjQACng3cSRI=\");\n_c = Crossword;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Crossword);\nvar _c;\n$RefreshReg$(_c, \"Crossword\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Crossword.tsx\n"));

/***/ })

});